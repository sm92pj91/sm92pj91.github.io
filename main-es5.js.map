{"version":3,"sources":["src/app/public/auth/confirm/confirmRegistration.html","src/app/public/auth/forgot/forgotPassword.html","src/app/public/auth/forgot/forgotPasswordStep2.html","src/app/public/auth/login/login.html","src/app/public/auth/mfa/mfa.html","src/app/public/auth/newpassword/newpassword.html","src/app/public/auth/register/registration.html","src/app/public/auth/resend/resendCode.html","src/app/public/home.html","src/app/public/landinghome.html","src/app/secure/jwttokens/jwt.html","src/app/secure/landing/secureHome.html","src/app/secure/profile/myprofile.html","src/app/secure/useractivity/useractivity.html","src/app/template/app.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/app.routes.ts","src/app/public/auth/confirm/confirmRegistration.component.ts","src/app/public/auth/forgot/forgotPassword.component.ts","src/app/public/auth/login/login.component.ts","src/app/public/auth/mfa/mfa.component.ts","src/app/public/auth/newpassword/newpassword.component.ts","src/app/public/auth/register/registration.component.ts","src/app/public/auth/resend/resendCode.component.ts","src/app/public/home.component.ts","src/app/secure/jwttokens/jwt.component.ts","src/app/secure/landing/securehome.component.ts","src/app/secure/profile/myprofile.component.ts","src/app/secure/useractivity/useractivity.component.ts","src/app/service/aws.service.ts","src/app/service/cognito.service.ts","src/app/service/ddb.service.ts","src/app/service/user-login.service.ts","src/app/service/user-parameters.service.ts","src/app/service/user-registration.service.ts","src/app/utils/jwt.interceptor.ts","src/environments/environment.ts","src/main.ts","fs (ignored)"],"names":[],"mappings":"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","sourcesContent":["export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Confirm Registration</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"email===null\\\">\\n        <label class=\\\"control-label\\\" for=\\\"confirmationCode\\\">Email</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"confirmationCode\\\">Confirmation Code</label>\\n        <input id=\\\"confirmationCode\\\" type=\\\"text\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"confirmationCode\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"onConfirmRegistration()\\\" id=\\\"confirmRegistration\\\" type=\\\"submit\\\"\\n                class=\\\"btn btn-info btn-block\\\">Confirm\\n        </button>\\n    </div>\\n    <hr>\\n    <p>Can't find your code? <a [routerLink]=\\\"['/home/resendCode']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Resend\\n        Code</a>\\n        <a [routerLink]=\\\"['/home/register']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Register</a> <a\\n                [routerLink]=\\\"['/home/login']\\\"> <i class=\\\"fa fa-fw fa-user\\\"></i> Login</a>\\n    </p>\\n</form>\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Forgot Password</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupEmail\\\">Email</label>\\n        <input id=\\\"signupEmail\\\" type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"onNext()\\\" id=\\\"nextPage\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">Next\\n        </button>\\n    </div>\\n\\n    <hr>\\n    <p><a [routerLink]=\\\"['/home/register']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Register</a> <a\\n            [routerLink]=\\\"['/home/login']\\\"> <i class=\\\"fa fa-fw fa-user\\\"></i> Login</a>\\n    </p>\\n</form>\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Forgot Password</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"verificationCode\\\">Verification Code</label>\\n        <input id=\\\"verificationCode\\\" type=\\\"verificationCode\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"verificationCode\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"newPassword\\\">New Password</label>\\n        <input id=\\\"newPassword\\\" type=\\\"password\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\"\\n               length=\\\"40\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"onNext()\\\" id=\\\"signupSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n            Reset Password\\n        </button>\\n    </div>\\n\\n    <hr>\\n    <p><a [routerLink]=\\\"['/home/resendCode']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Go back</a>\\n    </p>\\n</form>\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Login</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div *ngIf=\\\"!mfaStep\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"signupEmail\\\">Email</label>\\n            <input id=\\\"signupEmail\\\" required type=\\\"email\\\" maxlength=\\\"100\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"\\n                   [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"signupPassword\\\">Password</label>\\n            <input id=\\\"signupPassword\\\" required type=\\\"password\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\"\\n                   length=\\\"40\\\" [(ngModel)]=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"onLogin()\\\" id=\\\"signupSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n                Login\\n            </button>\\n        </div>\\n\\n        <hr>\\n        <p>\\n            <a [routerLink]=\\\"['/home/register']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Register</a>\\n            <a [routerLink]=\\\"['/home/forgotPassword']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Forgot Password?</a><br/>\\n            <a [routerLink]=\\\"['/home/resendCode']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Resend Confirmation Code</a>\\n        </p>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\" *ngIf=\\\"mfaStep\\\">\\n        <awscognito-mfa [destination]=\\\"mfaData.destination\\\"\\n                        [onSubmit]=\\\"mfaData.callback\\\"></awscognito-mfa>\\n        <hr>\\n        <a (click)=\\\"cancelMFA()\\\" href=\\\"\\\">Cancel</a>\\n    </div>\\n</form>\\n\\n\"","export default \"<div class=\\\"form-group\\\">\\n    <div>\\n        Authentication code has been sent to: {{destination}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <input id=\\\"mfaCode\\\" required type=\\\"text\\\" maxlength=\\\"10\\\" class=\\\"form-control\\\"\\n               length=\\\"40\\\" #code>\\n    </div>\\n    <button (click)=\\\"onSubmit(code.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n        Submit code\\n    </button>\\n</div>\\n\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Set new password</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupEmail\\\">Username / Email</label>\\n        <input id=\\\"signupEmail\\\" type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"registrationUser.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"existingPassword\\\">Temporary Password</label>\\n        <input id=\\\"existingPassword\\\" type=\\\"password\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\"\\n               placeholder=\\\"at least 8 characters\\\" length=\\\"40\\\" [(ngModel)]=\\\"registrationUser.existingPassword\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupPassword\\\">New Password</label>\\n        <input id=\\\"signupPassword\\\" type=\\\"password\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\"\\n               placeholder=\\\"at least 8 characters\\\" length=\\\"40\\\" [(ngModel)]=\\\"registrationUser.password\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"onRegister()\\\" id=\\\"signupSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n            Set your password\\n        </button>\\n    </div>\\n    <hr>\\n    <p>Already have an account? <a [routerLink]=\\\"['/home/login']\\\"> <i class=\\\"fa fa-fw fa-lock\\\"></i>Login</a></p>\\n</form>\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Create account</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupEmail\\\">Email</label>\\n        <input id=\\\"signupEmail\\\" type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"registrationUser.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupFirstname\\\">First Name</label>\\n        <input id=\\\"signupFirstname\\\" type=\\\"text\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"registrationUser.given_name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupSurname\\\">Surname</label>\\n        <input id=\\\"signupSurname\\\" type=\\\"text\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"registrationUser.family_name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupdob\\\">First Name</label>\\n        <input id=\\\"signupdob\\\" type=\\\"text\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n               [(ngModel)]=\\\"registrationUser.birthdate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupPassword\\\">DOB (dd-mm-yyy)</label>\\n        <input id=\\\"signupPassword\\\" type=\\\"password\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\"\\n               placeholder=\\\"at least 8 characters\\\" length=\\\"40\\\" [(ngModel)]=\\\"registrationUser.password\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"onRegister()\\\" id=\\\"signupSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n            Create your account\\n        </button>\\n    </div>\\n    <hr>\\n    <p>Already have an account? <a [routerLink]=\\\"['/home/login']\\\"> <i class=\\\"fa fa-fw fa-lock\\\"></i>Login</a></p>\\n</form>\\n\\n\"","export default \"<form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"#\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <h2>Resend Code</h2>\\n    </div>\\n    <div *ngIf=\\\"errorMessage!=null\\\" class=\\\"alert alert-danger\\\">\\n        {{ errorMessage }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"signupEmail\\\">Email</label>\\n        <input id=\\\"signupEmail\\\" type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"\\n               [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button (click)=\\\"resendCode()\\\" id=\\\"signupSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-info btn-block\\\">\\n            Resend Code\\n        </button>\\n    </div>\\n\\n    <hr>\\n    <p><a [routerLink]=\\\"['/home/register']\\\"> <i class=\\\"fa fa-fw fa-group\\\"></i> Register</a> <a\\n            [routerLink]=\\\"['/home/login']\\\"> <i class=\\\"fa fa-fw fa-user\\\"></i> Login</a>\\n    </p>\\n</form>\\n\"","export default \"<!-- Navigation -->\\n<nav class=\\\"navbar navbar-default navbar-fixed-top topnav\\\" role=\\\"navigation\\\">\\n    <div class=\\\"container topnav\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\"\\n                    data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand topnav\\\" href=\\\"#\\\">Cognito QuickStart</a>\\n        </div>\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/home']\\\">Home</a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/home/login']\\\">Login</a>\\n                </li>\\n            </ul>\\n        </div>\\n        <!-- /.navbar-collapse -->\\n    </div>\\n    <!-- /.container -->\\n</nav>\\n<div class=\\\"intro-header\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\"","export default \"<!-- Header -->\\n<a name=\\\"about\\\"></a>\\n<div class=\\\"intro-header\\\">\\n    <div class=\\\"container\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                <div class=\\\"intro-message\\\">\\n                    <h1>Cognito QuickStart App</h1>\\n                    <h3>Source code can be found <a href=\\\"https://github.com/awslabs/aws-cognito-angular2-quickstart\\\">here</a>\\n                    </h3>\\n                    <hr class=\\\"intro-divider\\\">\\n                    <ul class=\\\"list-inline intro-social-buttons\\\">\\n                        <li>\\n                            <a\\n                                    [routerLink]=\\\"['/home/login']\\\" class=\\\"btn btn-default btn-lg\\\"> <i\\n                                    class=\\\"fa fa-lock fa-fw\\\"></i> <span class=\\\"network-name\\\">Cognito</span> Login</a>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <!-- /.container -->\\n\\n</div>\\n<!-- /.intro-header -->\\n\"","export default \"<h1 class=\\\"page-header\\\">JWT Tokens</h1>\\n<ul class=\\\"nav nav-tabs\\\">\\n    <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#accesstoken\\\">Access Token</a></li>\\n    <li><a data-toggle=\\\"tab\\\" href=\\\"#idtoken\\\">Id Token</a></li>\\n</ul>\\n\\n<div class=\\\"tab-content\\\">\\n    <div id=\\\"accesstoken\\\" class=\\\"tab-pane fade in active\\\">\\n        <h3>Access Token</h3>\\n        <p>{{ stuff.accessToken }}</p>\\n    </div>\\n    <div id=\\\"idtoken\\\" class=\\\"tab-pane fade\\\">\\n        <h3>Id Token</h3>\\n        <p>{{ stuff.idToken }}</p>\\n    </div>\\n</div>\\n\"","export default \"<div id=\\\"wrapper\\\">\\n\\n    <!-- Navigation -->\\n    <nav class=\\\"navbar navbar-default navbar-static-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"index.html\\\">Cognito Startup</a>\\n        </div>\\n        <!-- /.navbar-header -->\\n\\n        <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n\\n            <!-- /.dropdown -->\\n            <li class=\\\"dropdown\\\">\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">\\n                    <i class=\\\"fa fa-user fa-fw\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i>\\n                </a>\\n                <ul class=\\\"dropdown-menu dropdown-user\\\">\\n                    <li><a [routerLink]=\\\"['/securehome/myprofile']\\\"><i class=\\\"fa fa-user fa-fw\\\"></i> User\\n                            Profile</a>\\n                    </li>\\n                    <li class=\\\"divider\\\"></li>\\n                    <li><a [routerLink]=\\\"['/securehome/logout']\\\">Logout</a>\\n                    </li>\\n                </ul>\\n                <!-- /.dropdown-user -->\\n            </li>\\n            <!-- /.dropdown -->\\n        </ul>\\n        <!-- /.navbar-top-links -->\\n\\n        <div class=\\\"navbar-default sidebar\\\" role=\\\"navigation\\\">\\n            <div class=\\\"sidebar-nav navbar-collapse\\\">\\n                <ul class=\\\"nav\\\" id=\\\"side-menu\\\">\\n                    <li>\\n                        <a [routerLink]=\\\"['/securehome/myprofile']\\\"><i class=\\\"fa fa-dashboard fa-fw\\\"></i> My Profile</a>\\n                    </li>\\n                    <li>\\n                        <a [routerLink]=\\\"['/securehome/jwttokens']\\\"><i class=\\\"fa fa-table fa-fw\\\"></i> JWT Tokens</a>\\n                    </li>\\n                    <li>\\n                        <a [routerLink]=\\\"['/securehome/useractivity']\\\"><i class=\\\"fa fa-table fa-fw\\\"></i> Login Data</a>\\n                    </li>\\n                    <li>\\n                        <a [routerLink]=\\\"['/challenges/view']\\\"><i class=\\\"fa fa-table fa-fw\\\"></i> Challenges</a>\\n                    </li>\\n                    <li>\\n                        <a [routerLink]=\\\"['/challenges/create']\\\"><i class=\\\"fa fa-table fa-fw\\\"></i> Create Challenge</a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <!-- /.sidebar-collapse -->\\n        </div>\\n        <!-- /.navbar-static-side -->\\n    </nav>\\n\\n    <!-- Page Content -->\\n    <div id=\\\"page-wrapper\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n\\n                    <router-outlet></router-outlet>\\n                </div>\\n                <!-- /.col-lg-12 -->\\n            </div>\\n            <!-- /.row -->\\n        </div>\\n        <!-- /.container-fluid -->\\n    </div>\\n    <!-- /#page-wrapper -->\\n\\n</div>\\n<!-- /#wrapper -->\"","export default \"<h1 class=\\\"page-header\\\">My Profile Parameters</h1>\\n\\n<div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-hover table-striped\\\">\\n        <tr>\\n            <th>Name</th>\\n            <th>Value</th>\\n        </tr>\\n        <tr *ngFor=\\\"let parameter of parameters\\\" class=\\\"active\\\">\\n            <td>{{ parameter.name }}</td>\\n            <td>{{ parameter.value }}</td>\\n        </tr>\\n\\n    </table>\\n</div>\\n\"","export default \"<h1 class=\\\"page-header\\\">My Login Activity</h1>\\n\\n<div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-hover table-striped\\\">\\n        <tr>\\n            <th>Action</th>\\n            <th>Date</th>\\n        </tr>\\n        <tr *ngFor=\\\"let item of logdata\\\" class=\\\"active\\\">\\n            <td>{{ item.type }}</td>\\n            <td>{{ item.date }}</td>\\n        </tr>\\n    </table>\\n</div>\\n\"","export default \"<router-outlet></router-outlet>\\n\"","var map = {\n\t\"./secure/challenge/challenge.module\": [\n\t\t\"./src/app/secure/challenge/challenge.module.ts\",\n\t\t\"secure-challenge-challenge-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","/**\n * @author Vladimir Budilov\n *\n * This is the entry-way into the routing logic. This is the first component that's called when the app\n * loads.\n *\n */\nimport {Component, OnInit} from \"@angular/core\";\nimport {AwsUtil} from \"./service/aws.service\";\nimport {UserLoginService} from \"./service/user-login.service\";\nimport {CognitoUtil, LoggedInCallback} from \"./service/cognito.service\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'template/app.html'\n})\nexport class AppComponent implements OnInit, LoggedInCallback {\n\n    constructor(public awsUtil: AwsUtil, public userService: UserLoginService, public cognito: CognitoUtil) {\n        console.log(\"AppComponent: constructor\");\n    }\n\n    ngOnInit() {\n        console.log(\"AppComponent: Checking if the user is already authenticated\");\n        this.userService.isAuthenticated(this);\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        console.log(\"AppComponent: the user is authenticated: \" + isLoggedIn);\n        let mythis = this;\n        this.cognito.getIdToken({\n            callback() {\n\n            },\n            callbackWithParam(token: any) {\n                // Include the passed-in callback here as well so that it's executed downstream\n                console.log(\"AppComponent: calling initAwsService in callback\")\n                mythis.awsUtil.initAwsService(null, isLoggedIn, token);\n            }\n        });\n    }\n}\n\n","import {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpModule} from \"@angular/http\";\nimport {AppComponent} from \"./app.component\";\nimport {UserRegistrationService} from \"./service/user-registration.service\";\nimport {UserParametersService} from \"./service/user-parameters.service\";\nimport {UserLoginService} from \"./service/user-login.service\";\nimport {CognitoUtil} from \"./service/cognito.service\";\nimport {routing} from \"./app.routes\";\nimport {AboutComponent, HomeComponent, HomeLandingComponent} from \"./public/home.component\";\nimport {AwsUtil} from \"./service/aws.service\";\nimport {UseractivityComponent} from \"./secure/useractivity/useractivity.component\";\nimport {MyProfileComponent} from \"./secure/profile/myprofile.component\";\nimport {SecureHomeComponent} from \"./secure/landing/securehome.component\";\nimport {JwtComponent} from \"./secure/jwttokens/jwt.component\";\nimport {DynamoDBService} from \"./service/ddb.service\";\nimport {LoginComponent} from \"./public/auth/login/login.component\";\nimport {RegisterComponent} from \"./public/auth/register/registration.component\";\nimport {ForgotPassword2Component, ForgotPasswordStep1Component} from \"./public/auth/forgot/forgotPassword.component\";\nimport {LogoutComponent, RegistrationConfirmationComponent} from \"./public/auth/confirm/confirmRegistration.component\";\nimport {ResendCodeComponent} from \"./public/auth/resend/resendCode.component\";\nimport {NewPasswordComponent} from \"./public/auth/newpassword/newpassword.component\";\nimport { MFAComponent } from './public/auth/mfa/mfa.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { JwtInterceptor } from \"./utils/jwt.interceptor\";\nimport { NgZorroAntdModule, NZ_I18N, en_GB } from 'ng-zorro-antd';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nregisterLocaleData(en);\n\n@NgModule({\n    declarations: [\n        NewPasswordComponent,\n        LoginComponent,\n        LogoutComponent,\n        RegistrationConfirmationComponent,\n        ResendCodeComponent,\n        ForgotPasswordStep1Component,\n        ForgotPassword2Component,\n        RegisterComponent,\n        MFAComponent,\n        AboutComponent,\n        HomeLandingComponent,\n        HomeComponent,\n        UseractivityComponent,\n        MyProfileComponent,\n        SecureHomeComponent,\n        JwtComponent,\n        AppComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n        HttpClientModule,\n        routing,\n        ReactiveFormsModule,\n        NgZorroAntdModule,\n        BrowserAnimationsModule\n\n    ],\n    providers: [\n        CognitoUtil,\n        AwsUtil,\n        DynamoDBService,\n        UserRegistrationService, \n        UserLoginService,\n        UserParametersService,\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: NZ_I18N, useValue: en_GB }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {RouterModule, Routes} from \"@angular/router\";\nimport {ModuleWithProviders} from \"@angular/core\";\nimport {AboutComponent, HomeComponent, HomeLandingComponent} from \"./public/home.component\";\nimport {SecureHomeComponent} from \"./secure/landing/securehome.component\";\nimport {MyProfileComponent} from \"./secure/profile/myprofile.component\";\nimport {JwtComponent} from \"./secure/jwttokens/jwt.component\";\nimport {UseractivityComponent} from \"./secure/useractivity/useractivity.component\";\nimport {LoginComponent} from \"./public/auth/login/login.component\";\nimport {RegisterComponent} from \"./public/auth/register/registration.component\";\nimport {ForgotPassword2Component, ForgotPasswordStep1Component} from \"./public/auth/forgot/forgotPassword.component\";\nimport {LogoutComponent, RegistrationConfirmationComponent} from \"./public/auth/confirm/confirmRegistration.component\";\nimport {ResendCodeComponent} from \"./public/auth/resend/resendCode.component\";\nimport {NewPasswordComponent} from \"./public/auth/newpassword/newpassword.component\";\n\nconst homeRoutes: Routes = [\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        component: HomeComponent,\n        children: [\n            // {path: 'about', component: AboutComponent},\n            {path: 'login', component: LoginComponent},\n            {path: 'register', component: RegisterComponent},\n            {path: 'confirmRegistration/:username', component: RegistrationConfirmationComponent},\n            {path: 'resendCode', component: ResendCodeComponent},\n            {path: 'forgotPassword/:email', component: ForgotPassword2Component},\n            {path: 'forgotPassword', component: ForgotPasswordStep1Component},\n            {path: 'newPassword', component: NewPasswordComponent},\n            {path: '', component: HomeLandingComponent}\n        ]\n    },\n];\n\nconst secureHomeRoutes: Routes = [\n    {\n\n        path: '',\n        redirectTo: '/securehome',\n        pathMatch: 'full'\n    },\n    {\n        path: 'securehome', component: SecureHomeComponent, children: [\n        {path: 'logout', component: LogoutComponent},\n        {path: 'jwttokens', component: JwtComponent},\n        {path: 'myprofile', component: MyProfileComponent},\n        {path: 'useractivity', component: UseractivityComponent},\n        {path: '', component: MyProfileComponent}]\n    },\n    { path: 'challenges', loadChildren: './secure/challenge/challenge.module#ChallengeModule' },\n];\n\nconst routes: Routes = [\n    {\n        path: '',\n        children: [\n            ...homeRoutes,\n            ...secureHomeRoutes,\n            {\n                path: '',\n                component: HomeComponent\n            }\n        ]\n    },\n\n\n];\n\nexport const appRoutingProviders: any[] = [];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserRegistrationService} from \"../../../service/user-registration.service\";\nimport {UserLoginService} from \"../../../service/user-login.service\";\nimport {LoggedInCallback} from \"../../../service/cognito.service\";\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    template: ''\n})\nexport class LogoutComponent implements LoggedInCallback {\n\n    constructor(public router: Router,\n                public userService: UserLoginService) {\n        this.userService.isAuthenticated(this)\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (isLoggedIn) {\n            this.userService.logout();\n            this.router.navigate(['/home']);\n        }\n\n        this.router.navigate(['/home']);\n    }\n}\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './confirmRegistration.html'\n})\nexport class RegistrationConfirmationComponent implements OnInit, OnDestroy {\n    confirmationCode: string;\n    email: string;\n    errorMessage: string;\n    private sub: any;\n\n    constructor(public regService: UserRegistrationService, public router: Router, public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            this.email = params['username'];\n\n        });\n\n        this.errorMessage = null;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    onConfirmRegistration() {\n        this.errorMessage = null;\n        this.regService.confirmRegistration(this.email, this.confirmationCode, this);\n    }\n\n    cognitoCallback(message: string, result: any) {\n        if (message != null) { //error\n            this.errorMessage = message;\n            console.log(\"message: \" + this.errorMessage);\n        } else { //success\n            //move to the next step\n            console.log(\"Moving to securehome\");\n            // this.configs.curUser = result.user;\n            this.router.navigate(['/securehome']);\n        }\n    }\n}\n\n\n\n\n\n","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserLoginService} from \"../../../service/user-login.service\";\nimport {CognitoCallback} from \"../../../service/cognito.service\";\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './forgotPassword.html'\n})\nexport class ForgotPasswordStep1Component implements CognitoCallback {\n    email: string;\n    errorMessage: string;\n\n    constructor(public router: Router,\n                public userService: UserLoginService) {\n        this.errorMessage = null;\n    }\n\n    onNext() {\n        this.errorMessage = null;\n        this.userService.forgotPassword(this.email, this);\n    }\n\n    cognitoCallback(message: string, result: any) {\n        if (message == null && result == null) { //error\n            this.router.navigate(['/home/forgotPassword', this.email]);\n        } else { //success\n            this.errorMessage = message;\n        }\n    }\n}\n\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './forgotPasswordStep2.html'\n})\nexport class ForgotPassword2Component implements CognitoCallback, OnInit, OnDestroy {\n\n    verificationCode: string;\n    email: string;\n    password: string;\n    errorMessage: string;\n    private sub: any;\n\n    constructor(public router: Router, public route: ActivatedRoute,\n                public userService: UserLoginService) {\n        console.log(\"email from the url: \" + this.email);\n    }\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            this.email = params['email'];\n\n        });\n        this.errorMessage = null;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    onNext() {\n        this.errorMessage = null;\n        this.userService.confirmNewPassword(this.email, this.verificationCode, this.password, this);\n    }\n\n    cognitoCallback(message: string) {\n        if (message != null) { //error\n            this.errorMessage = message;\n            console.log(\"result: \" + this.errorMessage);\n        } else { //success\n            this.router.navigate(['/home/login']);\n        }\n    }\n\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { UserLoginService } from \"../../../service/user-login.service\";\nimport { ChallengeParameters, CognitoCallback, LoggedInCallback } from \"../../../service/cognito.service\";\nimport { DynamoDBService } from \"../../../service/ddb.service\";\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './login.html'\n})\nexport class LoginComponent implements CognitoCallback, LoggedInCallback, OnInit {\n    email: string;\n    password: string;\n    errorMessage: string;\n    mfaStep = false;\n    mfaData = {\n        destination: '',\n        callback: null\n    };\n\n    constructor(public router: Router,\n                public ddb: DynamoDBService,\n                public userService: UserLoginService) {\n        console.log(\"LoginComponent constructor\");\n    }\n\n    ngOnInit() {\n        this.errorMessage = null;\n        console.log(\"Checking if the user is already authenticated. If so, then redirect to the secure site\");\n        this.userService.isAuthenticated(this);\n    }\n\n    onLogin() {\n        if (this.email == null || this.password == null) {\n            this.errorMessage = \"All fields are required\";\n            return;\n        }\n        this.errorMessage = null;\n        this.userService.authenticate(this.email, this.password, this);\n    }\n\n    cognitoCallback(message: string, result: any) {\n        if (message != null) { //error\n            this.errorMessage = message;\n            console.log(\"result: \" + this.errorMessage);\n            if (this.errorMessage === 'User is not confirmed.') {\n                console.log(\"redirecting\");\n                this.router.navigate(['/home/confirmRegistration', this.email]);\n            } else if (this.errorMessage === 'User needs to set password.') {\n                console.log(\"redirecting to set new password\");\n                this.router.navigate(['/home/newPassword']);\n            }\n        } else { //success\n            this.ddb.writeLogEntry(\"login\");\n            this.router.navigate(['/securehome']);\n        }\n    }\n\n    handleMFAStep(challengeName: string, challengeParameters: ChallengeParameters, callback: (confirmationCode: string) => any): void {\n        this.mfaStep = true;\n        this.mfaData.destination = challengeParameters.CODE_DELIVERY_DESTINATION;\n        this.mfaData.callback = (code: string) => {\n            if (code == null || code.length === 0) {\n                this.errorMessage = \"Code is required\";\n                return;\n            }\n            this.errorMessage = null;\n            callback(code);\n        };\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (isLoggedIn) {\n            this.router.navigate(['/securehome']);\n        }\n    }\n\n    cancelMFA(): boolean {\n        this.mfaStep = false;\n        return false;   //necessary to prevent href navigation\n    }\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'awscognito-mfa',\n    templateUrl: './mfa.html'\n})\nexport class MFAComponent {\n    @Input() destination: string;\n    @Input() onSubmit: (code: string) => void;\n\n    constructor() {\n        console.log(\"MFAComponent constructor\");\n    }\n}\n","import {Component} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {UserRegistrationService} from \"../../../service/user-registration.service\";\nimport {UserLoginService} from \"../../../service/user-login.service\";\nimport {CognitoCallback} from \"../../../service/cognito.service\";\n\nexport class NewPasswordUser {\n    username: string;\n    existingPassword: string;\n    password: string;\n}\n/**\n * This component is responsible for displaying and controlling\n * the registration of the user.\n */\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './newpassword.html'\n})\nexport class NewPasswordComponent implements CognitoCallback {\n    registrationUser: NewPasswordUser;\n    router: Router;\n    errorMessage: string;\n\n    constructor(public userRegistration: UserRegistrationService, public userService: UserLoginService, router: Router) {\n        this.router = router;\n        this.onInit();\n    }\n\n    onInit() {\n        this.registrationUser = new NewPasswordUser();\n        this.errorMessage = null;\n    }\n\n    ngOnInit() {\n        this.errorMessage = null;\n        console.log(\"Checking if the user is already authenticated. If so, then redirect to the secure site\");\n        this.userService.isAuthenticated(this);\n    }\n\n    onRegister() {\n        console.log(this.registrationUser);\n        this.errorMessage = null;\n        this.userRegistration.newPassword(this.registrationUser, this);\n    }\n\n    cognitoCallback(message: string, result: any) {\n        if (message != null) { //error\n            this.errorMessage = message;\n            console.log(\"result: \" + this.errorMessage);\n        } else { //success\n            //move to the next step\n            console.log(\"redirecting\");\n            this.router.navigate(['/securehome']);\n        }\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (isLoggedIn)\n            this.router.navigate(['/securehome']);\n    }\n}\n","import {Component} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {UserRegistrationService} from \"../../../service/user-registration.service\";\nimport {CognitoCallback} from \"../../../service/cognito.service\";\n\nexport class RegistrationUser {\n    email: string;\n    password: string;\n    family_name: string;\n    given_name: string;\n    birthdate: string;\n}\n/**\n * This component is responsible for displaying and controlling\n * the registration of the user.\n */\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './registration.html'\n})\nexport class RegisterComponent implements CognitoCallback {\n    registrationUser: RegistrationUser;\n    router: Router;\n    errorMessage: string;\n\n    constructor(public userRegistration: UserRegistrationService, router: Router) {\n        this.router = router;\n        this.onInit();\n    }\n\n    onInit() {\n        this.registrationUser = new RegistrationUser();\n        this.errorMessage = null;\n    }\n\n    onRegister() {\n        this.errorMessage = null;\n        this.userRegistration.register(this.registrationUser, this);\n    }\n\n    cognitoCallback(message: string, result: any) {\n        if (message != null) { //error\n            this.errorMessage = message;\n            console.log(\"result: \" + this.errorMessage);\n        } else { //success\n            //move to the next step\n            console.log(\"redirecting\");\n            this.router.navigate(['/home/confirmRegistration', result.user.username]);\n        }\n    }\n}\n","import {Component} from \"@angular/core\";\nimport {UserRegistrationService} from \"../../../service/user-registration.service\";\nimport {CognitoCallback} from \"../../../service/cognito.service\";\nimport {Router} from \"@angular/router\";\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './resendCode.html'\n})\nexport class ResendCodeComponent implements CognitoCallback {\n\n    email: string;\n    errorMessage: string;\n\n    constructor(public registrationService: UserRegistrationService, public router: Router) {\n\n    }\n\n    resendCode() {\n        this.registrationService.resendCode(this.email, this);\n    }\n\n    cognitoCallback(error: any, result: any) {\n        if (error != null) {\n            this.errorMessage = \"Something went wrong...please try again\";\n        } else {\n            this.router.navigate(['/home/confirmRegistration', this.email]);\n        }\n    }\n}","import {Component, OnInit} from \"@angular/core\";\n\ndeclare let AWS: any;\ndeclare let AWSCognito: any;\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    template: '<p>Hello and welcome!\"</p>'\n})\nexport class AboutComponent {\n\n}\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './landinghome.html'\n})\nexport class HomeLandingComponent {\n    constructor() {\n        console.log(\"HomeLandingComponent constructor\");\n    }\n}\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './home.html'\n})\nexport class HomeComponent implements OnInit {\n\n    constructor() {\n        console.log(\"HomeComponent constructor\");\n    }\n\n    ngOnInit() {\n\n    }\n}\n\n\n","import {Component} from \"@angular/core\";\nimport {UserLoginService} from \"../../service/user-login.service\";\nimport {Callback, CognitoUtil, LoggedInCallback} from \"../../service/cognito.service\";\nimport {Router} from \"@angular/router\";\n\n\nexport class Stuff {\n    public accessToken: string;\n    public idToken: string;\n}\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './jwt.html'\n})\nexport class JwtComponent implements LoggedInCallback {\n\n    public stuff: Stuff = new Stuff();\n\n    constructor(public router: Router, public userService: UserLoginService, public cognitoUtil: CognitoUtil) {\n        this.userService.isAuthenticated(this);\n        console.log(\"in JwtComponent\");\n\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (!isLoggedIn) {\n            this.router.navigate(['/home/login']);\n        } else {\n            this.cognitoUtil.getAccessToken(new AccessTokenCallback(this));\n            this.cognitoUtil.getIdToken(new IdTokenCallback(this));\n        }\n    }\n}\n\nexport class AccessTokenCallback implements Callback {\n    constructor(public jwt: JwtComponent) {\n\n    }\n\n    callback() {\n\n    }\n\n    callbackWithParam(result) {\n        this.jwt.stuff.accessToken = result;\n    }\n}\n\nexport class IdTokenCallback implements Callback {\n    constructor(public jwt: JwtComponent) {\n\n    }\n\n    callback() {\n\n    }\n\n    callbackWithParam(result) {\n        this.jwt.stuff.idToken = result;\n    }\n}\n","import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {UserLoginService} from \"../../service/user-login.service\";\nimport {LoggedInCallback} from \"../../service/cognito.service\";\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './secureHome.html'\n    // styleUrls: ['/assets/css/sb-admin.css']\n})\nexport class SecureHomeComponent implements OnInit, LoggedInCallback {\n\n    constructor(public router: Router, public userService: UserLoginService) {\n        this.userService.isAuthenticated(this);\n        console.log(\"SecureHomeComponent: constructor\");\n    }\n\n    ngOnInit() {\n\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (!isLoggedIn) {\n            this.router.navigate(['/home/login']);\n        }\n    }\n}\n\n","import {Component} from \"@angular/core\";\nimport {UserLoginService} from \"../../service/user-login.service\";\nimport {Callback, CognitoUtil, LoggedInCallback} from \"../../service/cognito.service\";\nimport {UserParametersService} from \"../../service/user-parameters.service\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './myprofile.html'\n})\nexport class MyProfileComponent implements LoggedInCallback {\n\n    public parameters: Array<Parameters> = [];\n    public cognitoId: String;\n\n    constructor(public router: Router, public userService: UserLoginService, public userParams: UserParametersService, public cognitoUtil: CognitoUtil) {\n        this.userService.isAuthenticated(this);\n        console.log(\"In MyProfileComponent\");\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (!isLoggedIn) {\n            this.router.navigate(['/home/login']);\n        } else {\n            this.userParams.getParameters(new GetParametersCallback(this, this.cognitoUtil));\n        }\n    }\n}\n\nexport class Parameters {\n    name: string;\n    value: string;\n}\n\nexport class GetParametersCallback implements Callback {\n\n    constructor(public me: MyProfileComponent, public cognitoUtil: CognitoUtil) {\n\n    }\n\n    callback() {\n\n    }\n\n    callbackWithParam(result: any) {\n\n        for (let i = 0; i < result.length; i++) {\n            let parameter = new Parameters();\n            parameter.name = result[i].getName();\n            parameter.value = result[i].getValue();\n            this.me.parameters.push(parameter);\n        }\n        let param = new Parameters()\n        param.name = \"cognito ID\";\n        param.value = this.cognitoUtil.getCognitoIdentity();\n        this.me.parameters.push(param)\n    }\n}\n","import {Component} from \"@angular/core\";\nimport {UserLoginService} from \"../../service/user-login.service\";\nimport {LoggedInCallback} from \"../../service/cognito.service\";\nimport {Router} from \"@angular/router\";\nimport {DynamoDBService} from \"../../service/ddb.service\";\n\n\nexport class Stuff {\n    public type: string;\n    public date: string;\n}\n\n@Component({\n    selector: 'awscognito-angular2-app',\n    templateUrl: './useractivity.html'\n})\nexport class UseractivityComponent implements LoggedInCallback {\n\n    public logdata: Array<Stuff> = [];\n\n    constructor(public router: Router, public ddb: DynamoDBService, public userService: UserLoginService) {\n        this.userService.isAuthenticated(this);\n        console.log(\"in UseractivityComponent\");\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (!isLoggedIn) {\n            this.router.navigate(['/home/login']);\n        } else {\n            console.log(\"scanning DDB\");\n            this.ddb.getLogEntries(this.logdata);\n        }\n    }\n\n}\n","import {Injectable} from \"@angular/core\";\nimport {Callback, CognitoUtil} from \"./cognito.service\";\nimport * as AWS from \"aws-sdk/global\";\n\n/**\n * Created by Vladimir Budilov\n */\n\n// declare var AMA: any;\n\n@Injectable()\nexport class AwsUtil {\n    public static firstLogin: boolean = false;\n    public static runningInit: boolean = false;\n\n    constructor(public cognitoUtil: CognitoUtil) {\n        AWS.config.region = CognitoUtil._REGION;\n    }\n\n    /**\n     * This is the method that needs to be called in order to init the aws global creds\n     */\n    initAwsService(callback: Callback, isLoggedIn: boolean, idToken: string) {\n\n        if (AwsUtil.runningInit) {\n            // Need to make sure I don't get into an infinite loop here, so need to exit if this method is running already\n            console.log(\"AwsUtil: Aborting running initAwsService()...it's running already.\");\n            // instead of aborting here, it's best to put a timer\n            if (callback != null) {\n                callback.callback();\n                callback.callbackWithParam(null);\n            }\n            return;\n        }\n\n\n        console.log(\"AwsUtil: Running initAwsService()\");\n        AwsUtil.runningInit = true;\n\n\n        let mythis = this;\n        // First check if the user is authenticated already\n        if (isLoggedIn)\n            mythis.setupAWS(isLoggedIn, callback, idToken);\n\n    }\n\n\n    /**\n     * Sets up the AWS global params\n     *\n     * @param isLoggedIn\n     * @param callback\n     */\n    setupAWS(isLoggedIn: boolean, callback: Callback, idToken: string): void {\n        console.log(\"AwsUtil: in setupAWS()\");\n        if (isLoggedIn) {\n            console.log(\"AwsUtil: User is logged in\");\n            // Setup mobile analytics\n            var options = {\n                appId: '32673c035a0b40e99d6e1f327be0cb60',\n                appTitle: \"aws-cognito-angular2-quickstart\"\n            };\n\n            // TODO: The mobile Analytics client needs some work to handle Typescript. Disabling for the time being.\n            // var mobileAnalyticsClient = new AMA.Manager(options);\n            // mobileAnalyticsClient.submitEvents();\n\n            this.addCognitoCredentials(idToken);\n\n            console.log(\"AwsUtil: Retrieving the id token\");\n\n        }\n        else {\n            console.log(\"AwsUtil: User is not logged in\");\n        }\n\n        if (callback != null) {\n            callback.callback();\n            callback.callbackWithParam(null);\n        }\n\n        AwsUtil.runningInit = false;\n    }\n\n    addCognitoCredentials(idTokenJwt: string): void {\n        let creds = this.cognitoUtil.buildCognitoCreds(idTokenJwt);\n\n        AWS.config.credentials = creds;\n\n        creds.get(function (err) {\n            if (!err) {\n                if (AwsUtil.firstLogin) {\n                    // save the login info to DDB\n                    this.ddb.writeLogEntry(\"login\");\n                    AwsUtil.firstLogin = false;\n                }\n            }\n        });\n    }\n\n    static getCognitoParametersForIdConsolidation(idTokenJwt: string): {} {\n        console.log(\"AwsUtil: enter getCognitoParametersForIdConsolidation()\");\n        let url = 'cognito-idp.' + CognitoUtil._REGION.toLowerCase() + '.amazonaws.com/' + CognitoUtil._USER_POOL_ID;\n        let logins: Array<string> = [];\n        logins[url] = idTokenJwt;\n        let params = {\n            IdentityPoolId: CognitoUtil._IDENTITY_POOL_ID, /* required */\n            Logins: logins\n        };\n\n        return params;\n    }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { CognitoUserPool } from \"amazon-cognito-identity-js\";\nimport * as AWS from \"aws-sdk/global\";\nimport * as awsservice from \"aws-sdk/lib/service\";\nimport * as CognitoIdentity from \"aws-sdk/clients/cognitoidentity\";\n\n\n/**\n * Created by Vladimir Budilov\n */\n\nexport interface CognitoCallback {\n    cognitoCallback(message: string, result: any): void;\n\n    handleMFAStep?(challengeName: string, challengeParameters: ChallengeParameters, callback: (confirmationCode: string) => any): void;\n}\n\nexport interface LoggedInCallback {\n    isLoggedIn(message: string, loggedIn: boolean): void;\n}\n\nexport interface ChallengeParameters {\n    CODE_DELIVERY_DELIVERY_MEDIUM: string;\n\n    CODE_DELIVERY_DESTINATION: string;\n}\n\nexport interface Callback {\n    callback(): void;\n\n    callbackWithParam(result: any): void;\n}\n\n@Injectable()\nexport class CognitoUtil {\n\n    public static _REGION = environment.region;\n\n    public static _IDENTITY_POOL_ID = environment.identityPoolId;\n    public static _USER_POOL_ID = environment.userPoolId;\n    public static _CLIENT_ID = environment.clientId;\n\n    public static _POOL_DATA: any = {\n        UserPoolId: CognitoUtil._USER_POOL_ID,\n        ClientId: CognitoUtil._CLIENT_ID\n    };\n\n    public cognitoCreds: AWS.CognitoIdentityCredentials;\n\n    getUserPool() {\n        if (environment.cognito_idp_endpoint) {\n            CognitoUtil._POOL_DATA.endpoint = environment.cognito_idp_endpoint;\n        }\n        return new CognitoUserPool(CognitoUtil._POOL_DATA);\n    }\n\n    getCurrentUser() {\n        return this.getUserPool().getCurrentUser();\n    }\n\n    // AWS Stores Credentials in many ways, and with TypeScript this means that\n    // getting the base credentials we authenticated with from the AWS globals gets really murky,\n    // having to get around both class extension and unions. Therefore, we're going to give\n    // developers direct access to the raw, unadulterated CognitoIdentityCredentials\n    // object at all times.\n    setCognitoCreds(creds: AWS.CognitoIdentityCredentials) {\n        this.cognitoCreds = creds;\n    }\n\n    getCognitoCreds() {\n        return this.cognitoCreds;\n    }\n\n    // This method takes in a raw jwtToken and uses the global AWS config options to build a\n    // CognitoIdentityCredentials object and store it for us. It also returns the object to the caller\n    // to avoid unnecessary calls to setCognitoCreds.\n\n    buildCognitoCreds(idTokenJwt: string) {\n        let url = 'cognito-idp.' + CognitoUtil._REGION.toLowerCase() + '.amazonaws.com/' + CognitoUtil._USER_POOL_ID;\n        if (environment.cognito_idp_endpoint) {\n            url = environment.cognito_idp_endpoint + '/' + CognitoUtil._USER_POOL_ID;\n        }\n        let logins: CognitoIdentity.LoginsMap = {};\n        logins[url] = idTokenJwt;\n        let params = {\n            IdentityPoolId: CognitoUtil._IDENTITY_POOL_ID, /* required */\n            Logins: logins\n        };\n        let serviceConfigs = <awsservice.ServiceConfigurationOptions>{};\n        if (environment.cognito_identity_endpoint) {\n            serviceConfigs.endpoint = environment.cognito_identity_endpoint;\n        }\n        let creds = new AWS.CognitoIdentityCredentials(params, serviceConfigs);\n        this.setCognitoCreds(creds);\n        return creds;\n    }\n\n\n    getCognitoIdentity(): string {\n        return this.cognitoCreds.identityId;\n    }\n\n    getAccessToken(callback: Callback): void {\n        if (callback == null) {\n            throw(\"CognitoUtil: callback in getAccessToken is null...returning\");\n        }\n        if (this.getCurrentUser() != null) {\n            this.getCurrentUser().getSession(function (err, session) {\n                if (err) {\n                    console.log(\"CognitoUtil: Can't set the credentials:\" + err);\n                    callback.callbackWithParam(null);\n                }\n                else {\n                    if (session.isValid()) {\n                        callback.callbackWithParam(session.getAccessToken().getJwtToken());\n                    }\n                }\n            });\n        }\n        else {\n            callback.callbackWithParam(null);\n        }\n    }\n\n    getIdToken(callback: Callback): void {\n        if (callback == null) {\n            throw(\"CognitoUtil: callback in getIdToken is null...returning\");\n        }\n        if (this.getCurrentUser() != null)\n            this.getCurrentUser().getSession(function (err, session) {\n                if (err) {\n                    console.log(\"CognitoUtil: Can't set the credentials:\" + err);\n                    callback.callbackWithParam(null);\n                }\n                else {\n                    if (session.isValid()) {\n                        callback.callbackWithParam(session.getIdToken().getJwtToken());\n                    } else {\n                        console.log(\"CognitoUtil: Got the id token, but the session isn't valid\");\n                    }\n                }\n            });\n        else\n            callback.callbackWithParam(null);\n    }\n\n    getRefreshToken(callback: Callback): void {\n        if (callback == null) {\n            throw(\"CognitoUtil: callback in getRefreshToken is null...returning\");\n        }\n        if (this.getCurrentUser() != null)\n            this.getCurrentUser().getSession(function (err, session) {\n                if (err) {\n                    console.log(\"CognitoUtil: Can't set the credentials:\" + err);\n                    callback.callbackWithParam(null);\n                }\n\n                else {\n                    if (session.isValid()) {\n                        callback.callbackWithParam(session.getRefreshToken());\n                    }\n                }\n            });\n        else\n            callback.callbackWithParam(null);\n    }\n\n    refresh(): void {\n        this.getCurrentUser().getSession(function (err, session) {\n            if (err) {\n                console.log(\"CognitoUtil: Can't set the credentials:\" + err);\n            }\n\n            else {\n                if (session.isValid()) {\n                    console.log(\"CognitoUtil: refreshed successfully\");\n                } else {\n                    console.log(\"CognitoUtil: refreshed but session is still not valid\");\n                }\n            }\n        });\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {CognitoUtil} from \"./cognito.service\";\nimport {environment} from \"../../environments/environment\";\n\nimport {Stuff} from \"../secure/useractivity/useractivity.component\";\nimport * as AWS from \"aws-sdk/global\";\nimport * as DynamoDB from \"aws-sdk/clients/dynamodb\";\n\n/**\n * Created by Vladimir Budilov\n */\n\n@Injectable()\nexport class DynamoDBService {\n\n    constructor(public cognitoUtil: CognitoUtil) {\n        console.log(\"DynamoDBService: constructor\");\n    }\n\n    getAWS() {\n        return AWS;\n    }\n\n    getLogEntries(mapArray: Array<Stuff>) {\n        console.log(\"DynamoDBService: reading from DDB with creds - \" + AWS.config.credentials);\n        var params = {\n            TableName: environment.ddbTableName,\n            KeyConditionExpression: \"userId = :userId\",\n            ExpressionAttributeValues: {\n                \":userId\": this.cognitoUtil.getCognitoIdentity()\n            }\n        };\n\n        var clientParams:any = {};\n        if (environment.dynamodb_endpoint) {\n            clientParams.endpoint = environment.dynamodb_endpoint;\n        }\n        var docClient = new DynamoDB.DocumentClient(clientParams);\n        docClient.query(params, onQuery);\n\n        function onQuery(err, data) {\n            if (err) {\n                console.error(\"DynamoDBService: Unable to query the table. Error JSON:\", JSON.stringify(err, null, 2));\n            } else {\n                // print all the movies\n                console.log(\"DynamoDBService: Query succeeded.\");\n                data.Items.forEach(function (logitem) {\n                    mapArray.push({type: logitem.type, date: logitem.activityDate});\n                });\n            }\n        }\n    }\n\n    writeLogEntry(type: string) {\n        try {\n            let date = new Date().toString();\n            console.log(\"DynamoDBService: Writing log entry. Type:\" + type + \" ID: \" + this.cognitoUtil.getCognitoIdentity() + \" Date: \" + date);\n            this.write(this.cognitoUtil.getCognitoIdentity(), date, type);\n        } catch (exc) {\n            console.log(\"DynamoDBService: Couldn't write to DDB\");\n        }\n\n    }\n\n    write(data: string, date: string, type: string): void {\n        console.log(\"DynamoDBService: writing \" + type + \" entry\");\n\n        let clientParams:any = {\n            params: {TableName: environment.ddbTableName}\n        };\n        if (environment.dynamodb_endpoint) {\n            clientParams.endpoint = environment.dynamodb_endpoint;\n        }\n        var DDB = new DynamoDB(clientParams);\n\n        // Write the item to the table\n        var itemParams =\n            {\n                TableName: environment.ddbTableName,\n                Item: {\n                    userId: {S: data},\n                    activityDate: {S: date},\n                    type: {S: type}\n                }\n            };\n        DDB.putItem(itemParams, function (result) {\n            console.log(\"DynamoDBService: wrote entry: \" + JSON.stringify(result));\n        });\n    }\n\n}\n\n\n","import { environment } from \"../../environments/environment\";\nimport { Injectable } from \"@angular/core\";\nimport { DynamoDBService } from \"./ddb.service\";\nimport { CognitoCallback, CognitoUtil, LoggedInCallback } from \"./cognito.service\";\nimport { AuthenticationDetails, CognitoUser, CognitoUserSession } from \"amazon-cognito-identity-js\";\nimport * as AWS from \"aws-sdk/global\";\nimport * as STS from \"aws-sdk/clients/sts\";\n\n@Injectable()\nexport class UserLoginService {\n\n    private onLoginSuccess = (callback: CognitoCallback, session: CognitoUserSession) => {\n\n        console.log(\"In authenticateUser onSuccess callback\");\n\n        AWS.config.credentials = this.cognitoUtil.buildCognitoCreds(session.getIdToken().getJwtToken());\n\n        // So, when CognitoIdentity authenticates a user, it doesn't actually hand us the IdentityID,\n        // used by many of our other handlers. This is handled by some sly underhanded calls to AWS Cognito\n        // API's by the SDK itself, automatically when the first AWS SDK request is made that requires our\n        // security credentials. The identity is then injected directly into the credentials object.\n        // If the first SDK call we make wants to use our IdentityID, we have a\n        // chicken and egg problem on our hands. We resolve this problem by \"priming\" the AWS SDK by calling a\n        // very innocuous API call that forces this behavior.\n        let clientParams: any = {};\n        if (environment.sts_endpoint) {\n            clientParams.endpoint = environment.sts_endpoint;\n        }\n        let sts = new STS(clientParams);\n        sts.getCallerIdentity(function (err, data) {\n            console.log(\"UserLoginService: Successfully set the AWS credentials\");\n            callback.cognitoCallback(null, session);\n        });\n    }\n\n    private onLoginError = (callback: CognitoCallback, err) => {\n        callback.cognitoCallback(err.message, null);\n    }\n\n    constructor(public ddb: DynamoDBService, public cognitoUtil: CognitoUtil) {\n    }\n\n    authenticate(username: string, password: string, callback: CognitoCallback) {\n        console.log(\"UserLoginService: starting the authentication\");\n\n        let authenticationData = {\n            Username: username,\n            Password: password,\n        };\n        let authenticationDetails = new AuthenticationDetails(authenticationData);\n\n        let userData = {\n            Username: username,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        console.log(\"UserLoginService: Params set...Authenticating the user\");\n        let cognitoUser = new CognitoUser(userData);\n        console.log(\"UserLoginService: config is \" + AWS.config);\n        cognitoUser.authenticateUser(authenticationDetails, {\n            newPasswordRequired: (userAttributes, requiredAttributes) => callback.cognitoCallback(`User needs to set password.`, null),\n            onSuccess: result => this.onLoginSuccess(callback, result),\n            onFailure: err => this.onLoginError(callback, err),\n            mfaRequired: (challengeName, challengeParameters) => {\n                callback.handleMFAStep(challengeName, challengeParameters, (confirmationCode: string) => {\n                    cognitoUser.sendMFACode(confirmationCode, {\n                        onSuccess: result => this.onLoginSuccess(callback, result),\n                        onFailure: err => this.onLoginError(callback, err)\n                    });\n                });\n            }\n        });\n    }\n\n    forgotPassword(username: string, callback: CognitoCallback) {\n        let userData = {\n            Username: username,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        let cognitoUser = new CognitoUser(userData);\n\n        cognitoUser.forgotPassword({\n            onSuccess: function () {\n\n            },\n            onFailure: function (err) {\n                callback.cognitoCallback(err.message, null);\n            },\n            inputVerificationCode() {\n                callback.cognitoCallback(null, null);\n            }\n        });\n    }\n\n    confirmNewPassword(email: string, verificationCode: string, password: string, callback: CognitoCallback) {\n        let userData = {\n            Username: email,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        let cognitoUser = new CognitoUser(userData);\n\n        cognitoUser.confirmPassword(verificationCode, password, {\n            onSuccess: function () {\n                callback.cognitoCallback(null, null);\n            },\n            onFailure: function (err) {\n                callback.cognitoCallback(err.message, null);\n            }\n        });\n    }\n\n    logout() {\n        console.log(\"UserLoginService: Logging out\");\n        this.ddb.writeLogEntry(\"logout\");\n        this.cognitoUtil.getCurrentUser().signOut();\n\n    }\n\n    isAuthenticated(callback: LoggedInCallback) {\n        if (callback == null)\n            throw(\"UserLoginService: Callback in isAuthenticated() cannot be null\");\n\n        let cognitoUser = this.cognitoUtil.getCurrentUser();\n\n        if (cognitoUser != null) {\n            cognitoUser.getSession(function (err, session) {\n                if (err) {\n                    console.log(\"UserLoginService: Couldn't get the session: \" + err, err.stack);\n                    callback.isLoggedIn(err, false);\n                }\n                else {\n                    console.log(\"UserLoginService: Session is \" + session.isValid());\n                    callback.isLoggedIn(err, session.isValid());\n                }\n            });\n        } else {\n            console.log(\"UserLoginService: can't retrieve the current user\");\n            callback.isLoggedIn(\"Can't retrieve the CurrentUser\", false);\n        }\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {Callback, CognitoUtil} from \"./cognito.service\";\n\n@Injectable()\nexport class UserParametersService {\n\n    constructor(public cognitoUtil: CognitoUtil) {\n    }\n\n    getParameters(callback: Callback) {\n        let cognitoUser = this.cognitoUtil.getCurrentUser();\n\n        if (cognitoUser != null) {\n            cognitoUser.getSession(function (err, session) {\n                if (err)\n                    console.log(\"UserParametersService: Couldn't retrieve the user\");\n                else {\n                    cognitoUser.getUserAttributes(function (err, result) {\n                        if (err) {\n                            console.log(\"UserParametersService: in getParameters: \" + err);\n                        } else {\n                            callback.callbackWithParam(result);\n                        }\n                    });\n                }\n\n            });\n        } else {\n            callback.callbackWithParam(null);\n        }\n\n\n    }\n}","import {Inject, Injectable} from \"@angular/core\";\nimport {CognitoCallback, CognitoUtil} from \"./cognito.service\";\nimport {AuthenticationDetails, CognitoUser, CognitoUserAttribute} from \"amazon-cognito-identity-js\";\nimport {RegistrationUser} from \"../public/auth/register/registration.component\";\nimport {NewPasswordUser} from \"../public/auth/newpassword/newpassword.component\";\nimport * as AWS from \"aws-sdk/global\";\n\n@Injectable()\nexport class UserRegistrationService {\n\n    constructor(@Inject(CognitoUtil) public cognitoUtil: CognitoUtil) {\n\n    }\n\n    register(user: RegistrationUser, callback: CognitoCallback): void {\n        console.log(\"UserRegistrationService: user is \" + user);\n\n        let attributeList = [];\n\n        let dataEmail = {\n            Name: 'email',\n            Value: user.email\n        }\n        let dataGivenName = {\n            Name: 'given_name',\n            Value: user.given_name\n        }\n        let dataFamilyName = {\n            Name: 'family_name',\n            Value: user.family_name\n        }\n        let dataBirthdate = {\n            Name: 'birthdate',\n            Value: user.birthdate\n        }\n        attributeList.push(new CognitoUserAttribute(dataEmail));\n        attributeList.push(new CognitoUserAttribute(dataGivenName));\n        attributeList.push(new CognitoUserAttribute(dataFamilyName));\n        attributeList.push(new CognitoUserAttribute(dataBirthdate));\n\n\n\n        this.cognitoUtil.getUserPool().signUp(user.email, user.password, attributeList, null, function (err, result) {\n            if (err) {\n                callback.cognitoCallback(err.message, null);\n            } else {\n                console.log(\"UserRegistrationService: registered user is \" + result);\n                callback.cognitoCallback(null, result);\n            }\n        });\n\n    }\n\n    confirmRegistration(username: string, confirmationCode: string, callback: CognitoCallback): void {\n\n        let userData = {\n            Username: username,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        let cognitoUser = new CognitoUser(userData);\n\n        cognitoUser.confirmRegistration(confirmationCode, true, function (err, result) {\n            if (err) {\n                callback.cognitoCallback(err.message, null);\n            } else {\n                callback.cognitoCallback(null, result);\n            }\n        });\n    }\n\n    resendCode(username: string, callback: CognitoCallback): void {\n        let userData = {\n            Username: username,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        let cognitoUser = new CognitoUser(userData);\n\n        cognitoUser.resendConfirmationCode(function (err, result) {\n            if (err) {\n                callback.cognitoCallback(err.message, null);\n            } else {\n                callback.cognitoCallback(null, result);\n            }\n        });\n    }\n\n    newPassword(newPasswordUser: NewPasswordUser, callback: CognitoCallback): void {\n        console.log(newPasswordUser);\n        // Get these details and call\n        //cognitoUser.completeNewPasswordChallenge(newPassword, userAttributes, this);\n        let authenticationData = {\n            Username: newPasswordUser.username,\n            Password: newPasswordUser.existingPassword,\n        };\n        let authenticationDetails = new AuthenticationDetails(authenticationData);\n\n        let userData = {\n            Username: newPasswordUser.username,\n            Pool: this.cognitoUtil.getUserPool()\n        };\n\n        console.log(\"UserLoginService: Params set...Authenticating the user\");\n        let cognitoUser = new CognitoUser(userData);\n        console.log(\"UserLoginService: config is \" + AWS.config);\n        cognitoUser.authenticateUser(authenticationDetails, {\n            newPasswordRequired: function (userAttributes, requiredAttributes) {\n                // User was signed up by an admin and must provide new\n                // password and required attributes, if any, to complete\n                // authentication.\n\n                // the api doesn't accept this field back\n                delete userAttributes.email_verified;\n                cognitoUser.completeNewPasswordChallenge(newPasswordUser.password, requiredAttributes, {\n                    onSuccess: function (result) {\n                        callback.cognitoCallback(null, userAttributes);\n                    },\n                    onFailure: function (err) {\n                        callback.cognitoCallback(err, null);\n                    }\n                });\n            },\n            onSuccess: function (result) {\n                callback.cognitoCallback(null, result);\n            },\n            onFailure: function (err) {\n                callback.cognitoCallback(err, null);\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoggedInCallback, CognitoUtil, Callback } from '../service/cognito.service';\nimport { UserLoginService } from '../service/user-login.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor, LoggedInCallback  {\n    public idToken: string;\n    constructor(public router: Router, public userService: UserLoginService, public cognitoUtil: CognitoUtil) {\n        this.userService.isAuthenticated(this);\n        console.log(\"in Jwt Interceptor\");\n\n    }\n\n    isLoggedIn(message: string, isLoggedIn: boolean) {\n        if (!isLoggedIn) {\n            this.router.navigate(['/home/login']);\n        } else {\n            this.cognitoUtil.getIdToken(new IdTokenCallback(this));\n        }\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // let currentUser = this.cognitoUtil.getCurrentUser().\n        // if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${this.idToken}`\n                }\n            });\n        // }\n        // console.log(this.idToken)\n        return next.handle(request);\n    }\n}\n\nexport class IdTokenCallback implements Callback {\n    constructor(public jwt: JwtInterceptor) {\n\n    }\n\n    callback() {\n\n    }\n\n    callbackWithParam(result) {\n        this.jwt.idToken = result;\n    }\n}","export const environment = {\n    production: false,\n\n    region: 'eu-west-1',\n    identityPoolId: 'eu-west-1:0bf58654-f85a-4f19-97eb-27c63dab47df',\n    userPoolId: 'eu-west-1_t8pZSNmmY',\n    clientId: '5o27hpnvud73r9c0sh338v6pkb',\n\n    rekognitionBucket: 'rekognition-pics',\n    albumName: \"usercontent\",\n    bucketRegion: 'eu-west-1',\n\n    ddbTableName: 'LoginTrail',\n\n    cognito_idp_endpoint: '',\n    cognito_identity_endpoint: '',\n    sts_endpoint: '',\n    dynamodb_endpoint: '',\n    s3_endpoint: '',\n    apiUrl: 'https://cmfz9gue62.execute-api.eu-west-1.amazonaws.com/preprod',\n};\n\n","import \"./polyfills.ts\";\nimport {platformBrowserDynamic} from \"@angular/platform-browser-dynamic\";\nimport {enableProdMode} from \"@angular/core\";\nimport {environment} from \"./environments/environment\";\nimport {AppModule} from \"./app/\";\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}